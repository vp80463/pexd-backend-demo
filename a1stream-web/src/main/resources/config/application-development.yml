--- # local development environment
spring.config.activate.on-profile: development
spring.devtools.restart.enabled: false

# serialize the JSON output
spring.jackson:
   serialization:
    INDENT_OUTPUT: true


solid.swagger.enable: true
solid.swagger:
  application-name: "A1Stream Web"
  application-description: "A1Stream Web"
  application-version: "1.0.0"
  contact-name: "YNA"
  use-token-for-auth: true
  token-name: "X-Auth-Token"

springdoc:
  api-docs.path: /swagger-ui
  api-docs.groups.enabled: true
  packages-to-scan:
    - com.a1stream
    - com.ymsl.solid
  packages-to-exclude:
    - com.ymsl.solid.websocket


management:
  endpoints:
    web:
      base-path: /monitor
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  server:
    add-application-context-header: false
    port: ${PROMETHEUS_PORT}
  prometheus:
    metrics:
      export:
        enabled: true

spring:
  datasource:
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20 # max pool size
      connection-timeout: 10000 # wait for connection for most 10 secs
      idleTimeout: 300000 # connection would be removed after 5 minutes

solid:
  oauth2:
    resource:
      url-patterns: /api/**

aws:
  cognito:
    poolId: ${COGNITO_POOLID_DEV}
    clientId: ${COGNITO_CLIENTID_DEV}
    clientSecret: ${COGNITO_CLIENTSECRET_DEV}
    authFlow: ${COGNITO_AUTHFLOW_DEV}


spring.security:
  oauth2:
    client:
      registration:
        cognito:
          clientId: ${COGNITO_CLIENTID_DEV}
          clientSecret: ${COGNITO_CLIENTSECRET_DEV}
          scope: openid
          redirect-uri: ${COGNITO_REDIRECTURI_DEV}
          clientName: ${COGNITO_CLIENTNAME_DEV}
      provider:
        cognito:
          issuerUri: ${COGNITO_ISSUERURI_DEV}
          user-name-attribute: ${COGNITO_USERNAMEATTR_DEV}
    resourceserver:
        jwt:
          issuer-uri: ${COGNITO_ISSUERURI_DEV}
          jwk-set-uri: ${COGNITO_JWKSETURI_DEV}
