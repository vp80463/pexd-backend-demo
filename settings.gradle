pluginManagement {
    repositories {
        mavenLocal()
        maven {
          name = "github-repo"
          url = "https://maven.pkg.github.com/YMC-GROUP/YNA-G3-PACKAGES"
          credentials {
            username = providers.gradleProperty("gpr.user").orElse(providers.environmentVariable("PACKAGE_USERNAME").orElse('')).get()
            password = providers.gradleProperty("gpr.key").orElse(providers.environmentVariable("PACKAGE_REPO_TOKEN").orElse('')).get()
          }
          mavenContent {
            releasesOnly()
          }
        }        
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/release' }
        maven { url 'https://repo.spring.io/snapshot' }
        // maven { url 'https://repo.spring.io/milestone' }
    }
   
    resolutionStrategy {
        eachPlugin {
            if (requested.id.namespace == 'com.ymsl.solid.build') {
                    useVersion("${settings['framework_version']}")
            }
        }
    }
}
 

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version "0.8.0"
}

dependencyResolutionManagement {
  repositories {
    mavenLocal()
    maven {
      name = "github-repo"
      url = "https://maven.pkg.github.com/YMC-GROUP/YNA-G3-PACKAGES"
      credentials {
           username = providers.gradleProperty("gpr.user").orElse(providers.environmentVariable("PACKAGE_USERNAME").orElse('')).get()
           password = providers.gradleProperty("gpr.key").orElse(providers.environmentVariable("PACKAGE_REPO_TOKEN").orElse('')).get()
      }
      mavenContent {
        releasesOnly()
      }
    } 
    mavenCentral()
    maven { url = "https://build.shibboleth.net/maven/releases/"}
  }

  versionCatalogs {
       libs {
            // from("com.ymsl.solid:gradle-version-catalog:${settings['framework_version']}")
             // overwrite the "groovy" version declared in the imported catalog
            // version("groovy", "3.0.6")
           library('fast-json', 'com.alibaba:fastjson:1.2.83')
           library('amqp-dependency', 'org.springframework.boot:spring-boot-starter-amqp:2.6.1')
           library('amqp-test-dependency', 'org.springframework.boot:spring-boot-starter-test:2.6.1')
           library('kong-hq', 'com.konghq:unirest-java:3.1.02')
           library('ws-jaxws-rt','com.sun.xml.ws:jaxws-rt:4.0.2')
           library('alibaba-easy-excel', 'com.alibaba:easyexcel:3.3.4')
           library('com-jcraft-jsch', 'com.jcraft:jsch:0.1.55')
           library('org-apache-pdfbox', 'org.apache.pdfbox:pdfbox:2.0.24')
        }
  }
}
rootDir.listFiles()
     .findAll { it.isDirectory() && 
                   new File(it, "build.gradle").exists() 
              }
     .each {
        //println("--->$it.name")
        include it.name
    }