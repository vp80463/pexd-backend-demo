MIN_MEM=${MIN_MEM:-1g}
MAX_MEM=${MAX_MEM:-1g}
METASPACE_SIZE=${METASPACE_SIZE:-512m}

APP_PROFILES_ACTIVE="${APP_PROFILES_ACTIVE:-production}"

APP_RUN_ROOT_DIR=${APP_RUN_ROOT_DIR:-.}
export APP_LOG_DIR="$APP_RUN_ROOT_DIR/logs"

ENABLE_REMOTE_DEBUG=${ENABLE_REMOTE_DEBUG:-false}
REMOTE_DEBUG_PORT=${REMOTE_DEBUG_PORT:-8787}
REMOTE_DEBUG_PENDING=${REMOTE_DEBUG_PENDING:-n}


# ENABLE_USE_G1=${ENABLE_USE_G1:-false}

ENABLE_GC_LOG=${ENABLE_GC_LOG:-true}
GC_FILE_COUNT=${GC_FILE_COUNT:-10}
GC_FILE_SIZE=${GC_FILE_SIZE:-10M}
GC_LOGS_DIR="$APP_RUN_ROOT_DIR/logs/gc"

ENABLE_SHENANDOAH_GC=${ENABLE_SHENANDOAH_GC:-false}
ENABLE_ZGC=${ENABLE_ZGC:-false}

ENABLE_OOM_DUMP=${ENABLE_OOM_DUMP:-true}
OOM_LOGS_DIR="$APP_RUN_ROOT_DIR/logs/oom"

APP_RUN_TMPDIR="$APP_RUN_ROOT_DIR/tmp"

[[ ! -d "$GC_LOGS_DIR" ]] && mkdir -p "$GC_LOGS_DIR" 
[[ ! -d "$OOM_LOGS_DIR" ]] && mkdir -p "$OOM_LOGS_DIR" 
[[ ! -d "$APP_RUN_TMPDIR" ]] && mkdir -p "$APP_RUN_TMPDIR" 

# Java options
## Set Java heap memory and initial memory size
JVM_OPTS="-Xmx$MAX_MEM -Xms$MIN_MEM"

## Set Java young generation size and thread stack size.
JVM_OPTS="$JVM_OPTS -Xmn128m -Xss256k"

## Set Java metaspace maximum size and initial size.
JVM_OPTS="$JVM_OPTS -XX:MaxMetaspaceSize=$METASPACE_SIZE"
JVM_OPTS="$JVM_OPTS -XX:MetaspaceSize=$METASPACE_SIZE"

## Enable server mode
JVM_OPTS="$JVM_OPTS -server"


## Writing log Synchronizily.
JVM_OPTS="$JVM_OPTS -Xlog:async"


## Set file encoding to UTF-8
JVM_OPTS="$JVM_OPTS -Dfile.encoding=UTF-8"

## Set temporary directory
JVM_OPTS="$JVM_OPTS -Djava.io.tmpdir=$APP_RUN_TMPDIR"

## Set headless mode, i.e., without a graphical interface.
JVM_OPTS="$JVM_OPTS -Djava.awt.headless=true"

## Set the level at which tiered compilation stops.
JVM_OPTS="$JVM_OPTS -XX:+TieredCompilation"
JVM_OPTS="$JVM_OPTS -XX:TieredStopAtLevel=1"

## Enable G1 garbage collector
# [[ "$ENABLE_USE_G1" = "true" ]]  && JVM_OPTS="$JVM_OPTS -XX:+UseG1GC"

## Enable string deduplication
[[ "$ENABLE_ZGC" != "true" ]] && JVM_OPTS="$JVM_OPTS -XX:+UseStringDeduplication"

## Set the age threshold for string deduplication
JVM_OPTS="$JVM_OPTS -XX:StringDeduplicationAgeThreshold=3"

## ShenandoahGC
[[ "$ENABLE_SHENANDOAH_GC" = "true" ]] && JVM_OPTS="$JVM_OPTS -XX:+UseShenandoahGC"

## ZGC
[[ "$ENABLE_ZGC" = "true" ]] && JVM_OPTS="$JVM_OPTS -XX:+UseZGC"

## Generate heap dump file on out of memory error and set the heap dump file path
[[ "$ENABLE_OOM_DUMP" = "true" ]]  &&  JVM_OPTS="$JVM_OPTS -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$OOM_LOGS_DIR"

# GC log
## Set the output path, format, and content of the GC log.
# [[ "$ENABLE_GC_LOG" = "true" ]]  && JVM_OPTS="$JVM_OPTS -Xlog:codecache+sweep*=trace,os+thread,safepoint,gc*,stringdedup+init=debug,gc+ergo*=trace,gc+age=trace,gc+phases=trace,gc+humongous=trace:file=$GC_LOGS_DIR/gc.log:time,uptime,level,tags:filecount=${GC_FILE_COUNT},filesize=${GC_FILE_SIZE}"
[[ "$ENABLE_GC_LOG" = "true" ]]  && JVM_OPTS="$JVM_OPTS -Xlog:gc*,stringdedup+init=debug,gc+age=trace:file=$GC_LOGS_DIR/gc.log:time,uptime,level,tags:filecount=${GC_FILE_COUNT},filesize=${GC_FILE_SIZE}"

## Remote debugging
[[ "$ENABLE_REMOTE_DEBUG" = "true" ]]  && JVM_OPTS="$JVM_OPTS -agentlib:jdwp=transport=dt_socket,address=$REMOTE_DEBUG_PORT,server=y,suspend=$REMOTE_DEBUG_PENDING"


## Extract jvm options
EXTRA_JVM_OPTS="-Dspring.profiles.active=${APP_PROFILES_ACTIVE} ${EXTRA_JVM_OPTS}"

##
JAVA_OPTS="$JVM_OPTS $EXTRA_JVM_OPTS"