
package com.a1stream.common.wsdl.org.tempuri;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 *
 * @author dong zhen
 */
@WebService(name = "PublishServiceSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PublishServiceSoap {


    /**
     * 
     * @param aCpass
     * @param account
     * @param convert
     * @param password
     * @param pattern
     * @param serial
     * @param username
     * @param xmlInvData
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ImportAndPublishInv", action = "http://tempuri.org/ImportAndPublishInv")
    @WebResult(name = "ImportAndPublishInvResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ImportAndPublishInv", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportAndPublishInv")
    @ResponseWrapper(localName = "ImportAndPublishInvResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportAndPublishInvResponse")
    public String importAndPublishInv(
        @WebParam(name = "Account", targetNamespace = "http://tempuri.org/")
        String account,
        @WebParam(name = "ACpass", targetNamespace = "http://tempuri.org/")
        String aCpass,
        @WebParam(name = "xmlInvData", targetNamespace = "http://tempuri.org/")
        String xmlInvData,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://tempuri.org/")
        String password,
        @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
        String pattern,
        @WebParam(name = "serial", targetNamespace = "http://tempuri.org/")
        String serial,
        @WebParam(name = "convert", targetNamespace = "http://tempuri.org/")
        int convert);

    /**
     * 
     * @param convert
     * @param password
     * @param pattern
     * @param serial
     * @param username
     * @param xmlInvData
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ImportInvPattern", action = "http://tempuri.org/ImportInvPattern")
    @WebResult(name = "ImportInvPatternResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ImportInvPattern", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportInvPattern")
    @ResponseWrapper(localName = "ImportInvPatternResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportInvPatternResponse")
    public String importInvPattern(
        @WebParam(name = "xmlInvData", targetNamespace = "http://tempuri.org/")
        String xmlInvData,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://tempuri.org/")
        String password,
        @WebParam(name = "convert", targetNamespace = "http://tempuri.org/")
        int convert,
        @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
        String pattern,
        @WebParam(name = "serial", targetNamespace = "http://tempuri.org/")
        String serial);

    /**
     * 
     * @param convert
     * @param password
     * @param username
     * @param xmlInvData
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ImportInv", action = "http://tempuri.org/ImportInv")
    @WebResult(name = "ImportInvResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ImportInv", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportInv")
    @ResponseWrapper(localName = "ImportInvResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportInvResponse")
    public String importInv(
        @WebParam(name = "xmlInvData", targetNamespace = "http://tempuri.org/")
        String xmlInvData,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://tempuri.org/")
        String password,
        @WebParam(name = "convert", targetNamespace = "http://tempuri.org/")
        int convert);

    /**
     * 
     * @param invIDs
     * @param password
     * @param pattern
     * @param serial
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/publishInv")
    @WebResult(name = "publishInvResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "publishInv", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PublishInv")
    @ResponseWrapper(localName = "publishInvResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PublishInvResponse")
    public String publishInv(
        @WebParam(name = "invIDs", targetNamespace = "http://tempuri.org/")
        ArrayOfInt invIDs,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://tempuri.org/")
        String password,
        @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
        String pattern,
        @WebParam(name = "serial", targetNamespace = "http://tempuri.org/")
        String serial);

    /**
     * 
     * @param convert
     * @param pass
     * @param username
     * @param xmlCusData
     * @return
     *     returns int
     */
    @WebMethod(operationName = "UpdateCus", action = "http://tempuri.org/UpdateCus")
    @WebResult(name = "UpdateCusResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "UpdateCus", targetNamespace = "http://tempuri.org/", className = "org.tempuri.UpdateCus")
    @ResponseWrapper(localName = "UpdateCusResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.UpdateCusResponse")
    public int updateCus(
        @WebParam(name = "XMLCusData", targetNamespace = "http://tempuri.org/")
        String xmlCusData,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "pass", targetNamespace = "http://tempuri.org/")
        String pass,
        @WebParam(name = "convert", targetNamespace = "http://tempuri.org/")
        Integer convert);

    /**
     * 
     * @param certSerial
     * @param certString
     * @param cusCode
     * @param pass
     * @param username
     * @return
     *     returns int
     */
    @WebMethod(action = "http://tempuri.org/setCusCert")
    @WebResult(name = "setCusCertResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "setCusCert", targetNamespace = "http://tempuri.org/", className = "org.tempuri.SetCusCert")
    @ResponseWrapper(localName = "setCusCertResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.SetCusCertResponse")
    public int setCusCert(
        @WebParam(name = "certSerial", targetNamespace = "http://tempuri.org/")
        String certSerial,
        @WebParam(name = "certString", targetNamespace = "http://tempuri.org/")
        String certString,
        @WebParam(name = "cusCode", targetNamespace = "http://tempuri.org/")
        String cusCode,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "pass", targetNamespace = "http://tempuri.org/")
        String pass);

    /**
     * 
     * @param convert
     * @param pass
     * @param pattern
     * @param serial
     * @param username
     * @param xmlInvData
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ImportInvByPatternSerial", action = "http://tempuri.org/ImportInvByPatternSerial")
    @WebResult(name = "ImportInvByPatternSerialResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ImportInvByPatternSerial", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportInvByPatternSerial")
    @ResponseWrapper(localName = "ImportInvByPatternSerialResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ImportInvByPatternSerialResponse")
    public String importInvByPatternSerial(
        @WebParam(name = "xmlInvData", targetNamespace = "http://tempuri.org/")
        String xmlInvData,
        @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
        String username,
        @WebParam(name = "pass", targetNamespace = "http://tempuri.org/")
        String pass,
        @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
        String pattern,
        @WebParam(name = "serial", targetNamespace = "http://tempuri.org/")
        String serial,
        @WebParam(name = "convert", targetNamespace = "http://tempuri.org/")
        int convert);

    /**
     * 
     * @param aCpass
     * @param account
     * @param lsFkey
     * @param pass
     * @param pattern
     * @param serial
     * @param userName
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/publishInvFkey")
    @WebResult(name = "publishInvFkeyResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "publishInvFkey", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PublishInvFkey")
    @ResponseWrapper(localName = "publishInvFkeyResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PublishInvFkeyResponse")
    public String publishInvFkey(
        @WebParam(name = "Account", targetNamespace = "http://tempuri.org/")
        String account,
        @WebParam(name = "ACpass", targetNamespace = "http://tempuri.org/")
        String aCpass,
        @WebParam(name = "lsFkey", targetNamespace = "http://tempuri.org/")
        String lsFkey,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName,
        @WebParam(name = "pass", targetNamespace = "http://tempuri.org/")
        String pass,
        @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
        String pattern,
        @WebParam(name = "serial", targetNamespace = "http://tempuri.org/")
        String serial);

    /**
     * 
     * @param aCpass
     * @param account
     * @param lsFkey
     * @param pass
     * @param pattern
     * @param userName
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/deleteInvFkey")
    @WebResult(name = "deleteInvFkeyResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "deleteInvFkey", targetNamespace = "http://tempuri.org/", className = "org.tempuri.DeleteInvFkey")
    @ResponseWrapper(localName = "deleteInvFkeyResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.DeleteInvFkeyResponse")
    public String deleteInvFkey(
        @WebParam(name = "lsFkey", targetNamespace = "http://tempuri.org/")
        String lsFkey,
        @WebParam(name = "Account", targetNamespace = "http://tempuri.org/")
        String account,
        @WebParam(name = "ACpass", targetNamespace = "http://tempuri.org/")
        String aCpass,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName,
        @WebParam(name = "pass", targetNamespace = "http://tempuri.org/")
        String pass,
        @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
        String pattern);

    /**
     *
     * @param username
     * @param fkeys
     * @param pattern
     * @param aCpass
     * @param account
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetMCCQThueByFkeysNoXMLSign", action = "http://tempuri.org/GetMCCQThueByFkeysNoXMLSign")
    @WebResult(name = "GetMCCQThueByFkeysNoXMLSignResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetMCCQThueByFkeysNoXMLSign", targetNamespace = "http://tempuri.org/", className = "com.GetMCCQThueByFkeysNoXMLSign")
    @ResponseWrapper(localName = "GetMCCQThueByFkeysNoXMLSignResponse", targetNamespace = "http://tempuri.org/", className = "com.GetMCCQThueByFkeysNoXMLSignResponse")
    public String getMCCQThueByFkeysNoXMLSign(
            @WebParam(name = "Account", targetNamespace = "http://tempuri.org/")
            String account,
            @WebParam(name = "ACpass", targetNamespace = "http://tempuri.org/")
            String aCpass,
            @WebParam(name = "username", targetNamespace = "http://tempuri.org/")
            String username,
            @WebParam(name = "password", targetNamespace = "http://tempuri.org/")
            String password,
            @WebParam(name = "pattern", targetNamespace = "http://tempuri.org/")
            String pattern,
            @WebParam(name = "fkeys", targetNamespace = "http://tempuri.org/")
            String fkeys
    );
}
