
package com.a1stream.common.wsdl.org.tempuri;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 * @author dong zhen
 */
@WebServiceClient(name = "YamahaPublishService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://cadminhntt78test.yamaha-motor.com.vn/YamahaPublishservice.asmx?WSDL")
public class YamahaPublishService extends Service {

    private static final URL YAMAHAPUBLISHSERVICE_WSDL_LOCATION;
    private static final WebServiceException YAMAHAPUBLISHSERVICE_EXCEPTION;
    private static final QName YAMAHAPUBLISHSERVICE_QNAME = new QName("http://tempuri.org/", "YamahaPublishService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://cadminhntt78test.yamaha-motor.com.vn/YamahaPublishservice.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        YAMAHAPUBLISHSERVICE_WSDL_LOCATION = url;
        YAMAHAPUBLISHSERVICE_EXCEPTION = e;
    }

    public YamahaPublishService() {
        super(__getWsdlLocation(), YAMAHAPUBLISHSERVICE_QNAME);
    }

    public YamahaPublishService(WebServiceFeature... features) {
        super(__getWsdlLocation(), YAMAHAPUBLISHSERVICE_QNAME, features);
    }

    public YamahaPublishService(URL wsdlLocation) {
        super(wsdlLocation, YAMAHAPUBLISHSERVICE_QNAME);
    }

    public YamahaPublishService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, YAMAHAPUBLISHSERVICE_QNAME, features);
    }

    public YamahaPublishService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public YamahaPublishService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns YamahaPublishServiceSoap
     */
    @WebEndpoint(name = "YamahaPublishServiceSoap")
    public YamahaPublishServiceSoap getYamahaPublishServiceSoap() {
        return super.getPort(new QName("http://tempuri.org/", "YamahaPublishServiceSoap"), YamahaPublishServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns YamahaPublishServiceSoap
     */
    @WebEndpoint(name = "YamahaPublishServiceSoap")
    public YamahaPublishServiceSoap getYamahaPublishServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "YamahaPublishServiceSoap"), YamahaPublishServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (YAMAHAPUBLISHSERVICE_EXCEPTION!= null) {
            throw YAMAHAPUBLISHSERVICE_EXCEPTION;
        }
        return YAMAHAPUBLISHSERVICE_WSDL_LOCATION;
    }
}
