package com.a1stream.domain.custom.impl;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.a1stream.common.constants.PJConstants.BatteryType;
import com.a1stream.common.constants.PJConstants.InventoryTransactionType;
import com.a1stream.common.constants.PJConstants.ProductClsType;
import com.a1stream.common.constants.PJConstants.SerialproductStockStatus;
import com.a1stream.domain.bo.batch.SdPSIExportItemBO;
import com.a1stream.domain.bo.unit.SDQ011402BO;
import com.a1stream.domain.bo.unit.SVM010402TransactionHistoryBO;
import com.a1stream.domain.custom.SerializedProductTranRepositoryCustom;
import com.a1stream.domain.form.unit.SDQ011402Form;
import com.ymsl.solid.base.util.DateUtils;
import com.ymsl.solid.jpa.query.JpaNativeQuerySupportRepository;

public class SerializedProductTranRepositoryCustomImpl extends JpaNativeQuerySupportRepository implements SerializedProductTranRepositoryCustom  {

    @Override
    public List<SDQ011402BO> getStockHistoryDetail(SDQ011402Form form) {

        Map<String, Object> params = new HashMap<>();
        StringBuilder sql = new StringBuilder();

        sql.append("      SELECT sp.frame_no         AS frameNo                            ");
        sql.append("           , sp.engine_no        AS engineNo                           ");
        sql.append("           , b1.battery_no       AS batteryId1                         ");
        sql.append("           , b2.battery_no       AS batteryId2                         ");
        sql.append("        FROM serialized_product_tran spt                               ");
        sql.append("   LEFT JOIN serialized_product sp                                     ");
        sql.append("          ON spt.serialized_product_id = sp.serialized_product_id      ");
        sql.append("   LEFT JOIN battery b1                                                ");
        sql.append("          ON spt.serialized_product_id = b1.serialized_product_id      ");
        sql.append("         AND b1.position_sign = :battery1                              ");
        sql.append("         AND b1.to_date > :sysDate                                     ");
        sql.append("         AND b1.from_date <= :sysDate                                  ");
        sql.append("   LEFT JOIN battery b2                                                ");
        sql.append("          ON spt.serialized_product_id = b2.serialized_product_id      ");
        sql.append("         AND b2.position_sign = :battery2                              ");
        sql.append("         AND b2.to_date > :sysDate                                     ");
        sql.append("         AND b2.from_date <= :sysDate                                  ");
        sql.append("       WHERE spt.site_id             = :siteId                        ");
        sql.append("         AND spt.product_id          = :modelId                        ");
        sql.append("         AND spt.related_slip_no     = :relatedSlipNo                  ");
        sql.append("         AND spt.transaction_type_id = :transactionTypeId              ");

        params.put("sysDate", LocalDate.now().format(DateTimeFormatter.ofPattern(DateUtils.FORMAT_YMD_NODELIMITER)));
        params.put("battery1", BatteryType.TYPE1.getCodeDbid());
        params.put("battery2", BatteryType.TYPE2.getCodeDbid());
        params.put("siteId", form.getSiteId());
        params.put("modelId", form.getModelId());
        params.put("relatedSlipNo", form.getRelatedSlipNo());
        params.put("transactionTypeId", form.getTransactionTypeId());

        return super.queryForList(sql.toString(), params, SDQ011402BO.class);
    }

    @Override
    public List<SVM010402TransactionHistoryBO> getMcTransHistData(Long serializedProductId, String siteId) {

        Map<String, Object> params = new HashMap<>();
        StringBuilder sql = new StringBuilder();

        sql.append("    SELECT spt.target_facility_id  AS pointId                       ");
        sql.append("         , mf.facility_cd          AS pointCd                       ");
        sql.append("         , mf.facility_nm          AS pointNm                       ");
        sql.append("         , spt.transaction_type_id AS transactionTypeId             ");
        sql.append("         , spt.transaction_date    AS transactionDate               ");
        sql.append("         , spt.related_slip_no     AS transactionNo                 ");
        sql.append("         , spt.created_by          AS pic                           ");
        sql.append("         , spt.to_consumer_id      AS toConsumerId                  ");
        sql.append("         , spt.from_party_id       AS fromPartyId                   ");
        sql.append("         , spt.to_party_id         AS toPartyId                     ");
        sql.append("         , spt.from_facility_id    AS fromFacilityId                ");
        sql.append("         , spt.to_facility_id      AS toFacilityId                  ");
        sql.append("      FROM serialized_product_tran spt                              ");
        sql.append(" LEFT JOIN mst_facility mf                                          ");
        sql.append("        ON mf.facility_id = spt.target_facility_id                  ");
        sql.append("     WHERE spt.serialized_product_id = :serializedProductId         ");
        sql.append("       AND spt.site_id = :siteId                                    ");

        params.put("serializedProductId", serializedProductId);
        params.put("siteId", siteId);

        return super.queryForList(sql.toString(), params, SVM010402TransactionHistoryBO.class);
    }

    @Override
    public List<SdPSIExportItemBO> getSdPSIExportList(Set<String> siteIdSet, Set<Long> facilityIdSet,  Set<Long> organizationIdSet, String dateFirst, String currentDate) {

        Map<String, Object> params = new HashMap<>();
        StringBuilder sql = new StringBuilder();

        sql.append("    WITH initialInvSub AS (                                                                                       ");
        sql.append("        SELECT it.target_facility_Id AS facilityId                                                                ");
        sql.append("             , it.product_id         AS productId                                                                 ");
        sql.append("             , mf.facility_cd        AS facilityCd                                                                ");
        sql.append("             , mp.product_cd         AS productCd                                                                 ");
        sql.append("             , sum(it.current_qty)   AS initialInv                                                                ");
        sql.append("             , 0                     AS ymvnIn                                                                    ");
        sql.append("             , 0                     AS wholesalesIn                                                              ");
        sql.append("             , 0                     AS transferIn                                                                ");
        sql.append("             , 0                     AS retailOut                                                                 ");
        sql.append("             , 0                     AS wholesalesOut                                                             ");
        sql.append("             , 0                     AS transferOut                                                               ");
        sql.append("             , 0                     AS intransit                                                                 ");
        sql.append("          FROM inventory_transaction it                                                                           ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = it.product_id                                                                      ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = it.target_facility_Id                                                             ");
        sql.append("         WHERE it.site_id IN (:siteIds)                                                                           ");
        sql.append("           AND it.product_classification = :S001GOODS                                                             ");
        sql.append("           AND it.inventory_transaction_type = :S027BEGINNINGMONTHSTOCK                                           ");
        sql.append("           AND it.physical_transaction_date >= :dateFirst                                                         ");
        sql.append("           AND it.target_facility_Id IN (:facilityIds)                                                            ");
        sql.append("    GROUP BY it.target_facility_Id, it.product_id, mf.facility_cd, mp.product_cd, it.physical_transaction_date    ");
        sql.append("    ),                                                                                                            ");
        sql.append("    ymvnInSub AS (                                                                                                ");
        sql.append("        SELECT spt.to_facility_id AS facilityId                                                                   ");
        sql.append("             , spt.product_id     AS productId                                                                    ");
        sql.append("             , mf.facility_cd     AS facilityCd                                                                   ");
        sql.append("             , mp.product_cd      AS productCd                                                                    ");
        sql.append("             , 0                  AS initialInv                                                                   ");
        sql.append("             , count(0)           AS ymvnIn                                                                       ");
        sql.append("             , 0                  AS wholesalesIn                                                                 ");
        sql.append("             , 0                  AS transferIn                                                                   ");
        sql.append("             , 0                  AS retailOut                                                                    ");
        sql.append("             , 0                  AS wholesalesOut                                                                ");
        sql.append("             , 0                  AS transferOut                                                                  ");
        sql.append("             , 0                  AS intransit                                                                    ");
        sql.append("          FROM serialized_product_tran spt                                                                        ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = spt.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = spt.to_facility_Id                                                                ");
        sql.append("         WHERE spt.site_id IN (:siteIds)                                                                          ");
        sql.append("           AND spt.transaction_type_id = :S027PURCHASESTOCKIN                                                     ");
        sql.append("           AND spt.to_facility_Id IN (:facilityIds)                                                               ");
        sql.append("           AND spt.transaction_date = :currentDate                                                                ");
        sql.append("           AND spt.from_party_id IN (:organizationIds)                                                            ");
        sql.append("    GROUP BY spt.to_facility_id, spt.product_id, mf.facility_cd, mp.product_cd, spt.transaction_date              ");
        sql.append("    ),                                                                                                            ");
        sql.append("    wholesalesInSub AS (                                                                                          ");
        sql.append("        SELECT spt.to_facility_id AS facilityId                                                                   ");
        sql.append("             , spt.product_id     AS productId                                                                    ");
        sql.append("             , mf.facility_cd     AS facilityCd                                                                   ");
        sql.append("             , mp.product_cd      AS productCd                                                                    ");
        sql.append("             , 0                  AS initialInv                                                                   ");
        sql.append("             , 0                  AS ymvnIn                                                                       ");
        sql.append("             , count(0)           AS wholesalesIn                                                                 ");
        sql.append("             , 0                  AS transferIn                                                                   ");
        sql.append("             , 0                  AS retailOut                                                                    ");
        sql.append("             , 0                  AS wholesalesOut                                                                ");
        sql.append("             , 0                  AS transferOut                                                                  ");
        sql.append("             , 0                  AS intransit                                                                    ");
        sql.append("          FROM serialized_product_tran spt                                                                        ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = spt.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = spt.to_facility_Id                                                                ");
        sql.append("         WHERE spt.site_id IN (:siteIds)                                                                          ");
        sql.append("           AND spt.transaction_type_id = :S027PURCHASESTOCKIN                                                     ");
        sql.append("           AND spt.to_facility_Id IN (:facilityIds)                                                               ");
        sql.append("           AND spt.transaction_date = :currentDate                                                                ");
        sql.append("           AND spt.from_party_id NOT IN (:organizationIds)                                                        ");
        sql.append("    GROUP BY spt.to_facility_id, spt.product_id, mf.facility_cd, mp.product_cd, spt.transaction_date              ");
        sql.append("    ),                                                                                                            ");
        sql.append("    transferInSub AS (                                                                                            ");
        sql.append("        SELECT spt.to_facility_id AS facilityId                                                                   ");
        sql.append("             , spt.product_id     AS productId                                                                    ");
        sql.append("             , mf.facility_cd     AS facilityCd                                                                   ");
        sql.append("             , mp.product_cd      AS productCd                                                                    ");
        sql.append("             , 0                  AS initialInv                                                                   ");
        sql.append("             , 0                  AS ymvnIn                                                                       ");
        sql.append("             , 0                  AS wholesalesIn                                                                 ");
        sql.append("             , count(0)           AS transferIn                                                                   ");
        sql.append("             , 0                  AS retailOut                                                                    ");
        sql.append("             , 0                  AS wholesalesOut                                                                ");
        sql.append("             , 0                  AS transferOut                                                                  ");
        sql.append("             , 0                  AS intransit                                                                    ");
        sql.append("          FROM serialized_product_tran spt                                                                        ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = spt.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = spt.to_facility_Id                                                                ");
        sql.append("         WHERE spt.site_id IN (:siteIds)                                                                          ");
        sql.append("           AND spt.transaction_type_id = :S027TRANSFERIN                                                          ");
        sql.append("           AND spt.to_facility_Id IN (:facilityIds)                                                               ");
        sql.append("           AND spt.transaction_date = :currentDate                                                                ");
        sql.append("    GROUP BY spt.to_facility_id, spt.product_id, mf.facility_cd, mp.product_cd, spt.transaction_date              ");
        sql.append("    ),                                                                                                            ");
        sql.append("    retailOutSub AS (                                                                                             ");
        sql.append("        SELECT spt.to_facility_id AS facilityId                                                                   ");
        sql.append("             , spt.product_id     AS productId                                                                    ");
        sql.append("             , mf.facility_cd     AS facilityCd                                                                   ");
        sql.append("             , mp.product_cd      AS productCd                                                                    ");
        sql.append("             , 0                  AS initialInv                                                                   ");
        sql.append("             , 0                  AS ymvnIn                                                                       ");
        sql.append("             , 0                  AS wholesalesIn                                                                 ");
        sql.append("             , 0                  AS transferIn                                                                   ");
        sql.append("             , count(0)           AS retailOut                                                                    ");
        sql.append("             , 0                  AS wholesalesOut                                                                ");
        sql.append("             , 0                  AS transferOut                                                                  ");
        sql.append("             , 0                  AS intransit                                                                    ");
        sql.append("          FROM serialized_product_tran spt                                                                        ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = spt.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = spt.to_facility_Id                                                                ");
        sql.append("         WHERE spt.site_id IN (:siteIds)                                                                          ");
        sql.append("           AND spt.transaction_type_id = :S027SALESTOCKOUT                                                        ");
        sql.append("           AND spt.to_facility_Id IN (:facilityIds)                                                               ");
        sql.append("           AND spt.transaction_date = :currentDate                                                                ");
        sql.append("           AND spt.to_consumer_id IS NOT null                                                                     ");
        sql.append("           AND spt.to_party_id IS null                                                                            ");
        sql.append("    GROUP BY spt.to_facility_id, spt.product_id, mf.facility_cd, mp.product_cd, spt.transaction_date              ");
        sql.append("    ),                                                                                                            ");
        sql.append("    wholesalesOutSub AS (                                                                                         ");
        sql.append("        SELECT spt.to_facility_id AS facilityId                                                                   ");
        sql.append("             , spt.product_id     AS productId                                                                    ");
        sql.append("             , mf.facility_cd     AS facilityCd                                                                   ");
        sql.append("             , mp.product_cd      AS productCd                                                                    ");
        sql.append("             , 0                  AS initialInv                                                                   ");
        sql.append("             , 0                  AS ymvnIn                                                                       ");
        sql.append("             , 0                  AS wholesalesIn                                                                 ");
        sql.append("             , 0                  AS transferIn                                                                   ");
        sql.append("             , 0                  AS retailOut                                                                    ");
        sql.append("             , count(0)           AS wholesalesOut                                                                ");
        sql.append("             , 0                  AS transferOut                                                                  ");
        sql.append("             , 0                  AS intransit                                                                    ");
        sql.append("          FROM serialized_product_tran spt                                                                        ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = spt.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = spt.to_facility_Id                                                                ");
        sql.append("         WHERE spt.site_id IN (:siteIds)                                                                          ");
        sql.append("           AND spt.transaction_type_id = :S027SALESTOCKOUT                                                        ");
        sql.append("           AND spt.to_facility_Id IN (:facilityIds)                                                               ");
        sql.append("           AND spt.transaction_date = :currentDate                                                                ");
        sql.append("           AND spt.to_consumer_id IS  null                                                                        ");
        sql.append("           AND spt.to_party_id IS NOT null                                                                        ");
        sql.append("    GROUP BY spt.to_facility_id, spt.product_id, mf.facility_cd, mp.product_cd, spt.transaction_date              ");
        sql.append("    ),                                                                                                            ");
        sql.append("    transferOutSub AS (                                                                                           ");
        sql.append("        SELECT spt.to_facility_id AS facilityId                                                                   ");
        sql.append("             , spt.product_id     AS productId                                                                    ");
        sql.append("             , mf.facility_cd     AS facilityCd                                                                   ");
        sql.append("             , mp.product_cd      AS productCd                                                                    ");
        sql.append("             , 0                  AS initialInv                                                                   ");
        sql.append("             , 0                  AS ymvnIn                                                                       ");
        sql.append("             , 0                  AS wholesalesIn                                                                 ");
        sql.append("             , 0                  AS transferIn                                                                   ");
        sql.append("             , 0                  AS retailOut                                                                    ");
        sql.append("             , 0                  AS wholesalesOut                                                                ");
        sql.append("             , count(0)           AS transferOut                                                                  ");
        sql.append("             , 0                  AS intransit                                                                    ");
        sql.append("          FROM serialized_product_tran spt                                                                        ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = spt.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = spt.to_facility_Id                                                                ");
        sql.append("         WHERE spt.site_id IN (:siteIds)                                                                          ");
        sql.append("           AND spt.transaction_type_id = :S027TRANSFEROUT                                                         ");
        sql.append("           AND spt.to_facility_Id IN (:facilityIds)                                                               ");
        sql.append("           AND spt.transaction_date = :currentDate                                                                ");
        sql.append("    GROUP BY spt.to_facility_id, spt.product_id, mf.facility_cd, mp.product_cd, spt.transaction_date              ");
        sql.append("    ),                                                                                                            ");
        sql.append("    intransitSub AS (                                                                                             ");
        sql.append("        SELECT rs.received_facility_id AS facilityId                                                              ");
        sql.append("             , rsi.product_id          AS productId                                                               ");
        sql.append("             , mf.facility_cd          AS facilityCd                                                              ");
        sql.append("             , mp.product_cd           AS productCd                                                               ");
        sql.append("             , 0                       AS initialInv                                                              ");
        sql.append("             , 0                       AS ymvnIn                                                                  ");
        sql.append("             , 0                       AS wholesalesIn                                                            ");
        sql.append("             , 0                       AS transferIn                                                              ");
        sql.append("             , 0                       AS retailOut                                                               ");
        sql.append("             , 0                       AS wholesalesOut                                                           ");
        sql.append("             , 0                       AS transferOut                                                             ");
        sql.append("             , sum(rsi.receipt_qty)    AS intransit                                                               ");
        sql.append("          FROM receipt_slip rs                                                                                    ");
        sql.append("    INNER JOIN receipt_slip_item rsi                                                                              ");
        sql.append("            ON rsi.receipt_slip_id = rs.receipt_slip_id                                                           ");
        sql.append("    INNER JOIN mst_product AS mp                                                                                  ");
        sql.append("            ON mp.product_id = rsi.product_id                                                                     ");
        sql.append("    INNER JOIN mst_facility AS mf                                                                                 ");
        sql.append("            ON mf.facility_id = rs.received_facility_id                                                           ");
        sql.append("         WHERE rs.site_id IN (:siteIds)                                                                           ");
        sql.append("           AND rs.product_classification = :S001GOODS                                                             ");
        sql.append("           AND rs.receipt_slip_status = :S033ONTRANSIT                                                            ");
        sql.append("           AND rs.inventory_transaction_type IN(:S027PURCHASESTOCKIN, :S027TRANSFERIN )                           ");
        sql.append("           AND rs.received_facility_id IN (:facilityIds)                                                          ");
        sql.append("    GROUP BY rs.received_facility_id, rsi.product_id, mf.facility_cd, mp.product_cd                               ");
        sql.append("    )                                                                                                             ");
        sql.append("    SELECT psi.facilityCd          AS facilityCd                                                                  ");
        sql.append("         , psi.productCd           AS productCd                                                                   ");
        sql.append("         , sum(psi.initialInv)     AS initialInv                                                                  ");
        sql.append("         , sum(psi.ymvnIn)         AS ymvnIn                                                                      ");
        sql.append("         , sum(psi.wholesalesIn)   AS wholesalesIn                                                                ");
        sql.append("         , sum(psi.transferIn)     AS transferIn                                                                  ");
        sql.append("         , sum(psi.retailOut)      AS retailOut                                                                   ");
        sql.append("         , sum(psi.wholesalesOut)  AS wholesalesOut                                                               ");
        sql.append("         , sum(psi.transferOut)    AS transferOut                                                                 ");
        sql.append("         , sum(psi.intransit)      AS intransit                                                                   ");
        sql.append("      FROM (                                                                                                      ");
        sql.append("            SELECT * FROM initialInvSub                                                                           ");
        sql.append("            UNION ALL                                                                                             ");
        sql.append("            SELECT * FROM ymvnInSub                                                                               ");
        sql.append("            UNION ALL                                                                                             ");
        sql.append("            SELECT * FROM wholesalesInSub                                                                         ");
        sql.append("            UNION ALL                                                                                             ");
        sql.append("            SELECT * FROM transferInSub                                                                           ");
        sql.append("            UNION ALL                                                                                             ");
        sql.append("            SELECT * FROM retailOutSub                                                                            ");
        sql.append("            UNION ALL                                                                                             ");
        sql.append("            SELECT * FROM wholesalesOutSub                                                                        ");
        sql.append("            UNION ALL                                                                                             ");
        sql.append("            SELECT * FROM intransitSub                                                                            ");
        sql.append("            ) AS psi                                                                                              ");
        sql.append("    GROUP BY facilityCd, productCd;                                                                               ");

        params.put("S001GOODS", ProductClsType.GOODS.getCodeDbid());
        params.put("S027BEGINNINGMONTHSTOCK", InventoryTransactionType.BEGINNINGMONTHSTOCK.getCodeDbid());
        params.put("S027PURCHASESTOCKIN", InventoryTransactionType.PURCHASESTOCKIN.getCodeDbid());
        params.put("S027TRANSFERIN", InventoryTransactionType.TRANSFERIN.getCodeDbid());
        params.put("S027SALESTOCKOUT", InventoryTransactionType.SALESTOCKOUT.getCodeDbid());
        params.put("S027TRANSFEROUT", InventoryTransactionType.TRANSFEROUT.getCodeDbid());
        params.put("S033ONTRANSIT", SerialproductStockStatus.ONTRANSFER);
        params.put("siteIds", siteIdSet);
        params.put("facilityIds", facilityIdSet);
        params.put("organizationIds", organizationIdSet);
        params.put("dateFirst", dateFirst);
        params.put("currentDate", currentDate);

        return super.queryForList(sql.toString(), params, SdPSIExportItemBO.class);
    }

}
